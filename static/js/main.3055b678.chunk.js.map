{"version":3,"sources":["lib/api.js","components/SearchBar.js","components/CharacterCard.js","components/CharacterList.js","components/SearchPage.js","components/FilmList.js","components/CharacterPage.js","components/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["getCharacterSearchResults","query","a","axios","get","response","data","results","count","next","previous","characters","map","result","name","id","url","split","homeworldUrl","homeworld","speciesUrl","species","getPageResults","httpsUrl","replace","console","log","getCharacterInfo","cancelToken","filmsArray","films","getSpeciesInfo","getHomeworldInfo","population","parseInt","toLocaleString","getFilmInfo","opening_crawl","substring","title","release_date","SearchBar","setCharacters","isLoading","setIsLoading","ref","useRef","useState","currentPage","setCurrentPage","searchResultCount","setSearchResultCount","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","useEffect","current","focus","handlePageChange","event","target","pageResults","isCancel","error","handleNewSearch","searchResults","Title","SearchInput","placeholder","labelKey","option","onSearch","onInputChange","minLength","useCache","open","MenuBar","Container","Button","onClick","icon","faChevronLeft","faChevronRight","styled","h1","AsyncTypeahead","div","span","CharacterCard","character","setSpecies","setHomeworld","history","useHistory","signal","CancelToken","source","handleSpeciesRequest","token","handleHomeworldRequest","cancel","Card","push","SpeciesText","Description","faCircleNotch","spin","h3","p","CharacterList","Loader","size","List","key","ul","SearchPage","FilmList","setFilms","sort","b","Date","parse","film","li","CharacterPage","match","setCharacter","handleCharacterRequest","toast","detail","status","handleMultipleFilmRequest","Promise","all","params","Wrapper","Header","Subtitle","CloseButton","faTimes","NotFoundPage","h2","App","basename","exact","path","process","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3055b678.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getCharacterSearchResults = async (query) => {\n  const response = await axios.get(\n    `https://swapi.dev/api/people/?search=${query}`\n  );\n  const { results, count, next, previous } = response.data;\n  const characters = results.map((result) => ({\n    name: result.name,\n    id: result.url.split('/')[5],\n    homeworldUrl: result.homeworld,\n    speciesUrl: result.species[0],\n  }));\n  return { characters, count, next, previous };\n};\n\nexport const getPageResults = async (url) => {\n  const httpsUrl = url.replace('http://', 'https://');\n  console.log(`Requested url: ${httpsUrl}`);\n  const response = await axios.get(httpsUrl);\n  const { results, next, previous } = response.data;\n  const characters = results.map((result) => ({\n    name: result.name,\n    id: result.url.split('/')[5],\n    homeworldUrl: result.homeworld,\n    speciesUrl: result.species[0],\n  }));\n  return { characters, next, previous };\n};\n\nexport const getCharacterInfo = async (id, cancelToken) => {\n  const response = await axios.get(`https://swapi.dev/api/people/${id}`);\n  const data = response.data;\n  return {\n    name: data.name,\n    id,\n    homeworldUrl: data.homeworld,\n    speciesUrl: data.species[0],\n    filmsArray: data.films,\n  };\n};\n\nexport const getSpeciesInfo = async (url, cancelToken) => {\n  if (!url) {\n    throw 'No valid species found';\n  }\n  const httpsUrl = url.replace('http://', 'https://');\n  console.log(`Requested url: ${httpsUrl}`);\n  const response = await axios.get(`${httpsUrl}`, {\n    cancelToken: cancelToken,\n  });\n  const data = response.data;\n  return {\n    name: data.name,\n  };\n};\n\nexport const getHomeworldInfo = async (url, cancelToken) => {\n  if (!url) {\n    return {};\n  }\n  const httpsUrl = url.replace('http://', 'https://');\n  console.log(`Requested url: ${httpsUrl}`);\n  const response = await axios.get(`${httpsUrl}`, {\n    cancelToken: cancelToken,\n  });\n  const data = response.data;\n\n  // Prettify number by adding commas after every 3 digits\n  let population = data.population;\n  if (population !== 'unknown') {\n    population = parseInt(population).toLocaleString();\n  }\n  return {\n    name: data.name,\n    population: population,\n  };\n};\n\nexport const getFilmInfo = async (url, cancelToken) => {\n  if (!url) {\n    return {};\n  }\n  const httpsUrl = url.replace('http://', 'https://');\n  console.log(`Requested url: ${httpsUrl}`);\n  const response = await axios.get(`${httpsUrl}`, {\n    cancelToken: cancelToken,\n  });\n  const data = response.data;\n  // Clip opening crawl to first 150 characters\n  const opening_crawl = data.opening_crawl.substring(0, 150);\n  return {\n    title: data.title,\n    release_date: data.release_date,\n    opening_crawl: opening_crawl,\n  };\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport { toast } from 'react-toastify';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nimport { getCharacterSearchResults, getPageResults } from '../lib/api';\n\nconst SearchBar = ({ setCharacters, isLoading, setIsLoading }) => {\n  const ref = useRef();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchResultCount, setSearchResultCount] = useState(0);\n  const [nextPageUrl, setNextPageUrl] = useState('');\n  const [prevPageUrl, setPrevPageUrl] = useState('');\n\n  // Focus on search bar on render for better UX\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const handlePageChange = async (event) => {\n    try {\n      setIsLoading(true);\n      let pageResults;\n      if (event.target.id === 'next') {\n        pageResults = await getPageResults(nextPageUrl);\n        setCurrentPage(currentPage + 1);\n      } else {\n        pageResults = await getPageResults(prevPageUrl);\n        setCurrentPage(currentPage - 1);\n      }\n      setCharacters(pageResults.characters);\n      setNextPageUrl(pageResults.next);\n      setPrevPageUrl(pageResults.previous);\n      setIsLoading(false);\n    } catch (err) {\n      if (!axios.isCancel(err)) {\n        console.error(err);\n      }\n    }\n  };\n\n  const handleNewSearch = async (query) => {\n    try {\n      setIsLoading(true);\n      // reset current page to 1 on new query\n      setCurrentPage(1);\n      const searchResults = await getCharacterSearchResults(query);\n      setCharacters(searchResults.characters);\n      setSearchResultCount(searchResults.count);\n      setNextPageUrl(searchResults.next);\n      setPrevPageUrl(searchResults.previous);\n      setIsLoading(false);\n    } catch (err) {\n      if (!axios.isCancel(err)) {\n        console.error(err);\n      }\n    }\n  };\n\n  // If query is empty, empty the results\n  const checkEmpty = (query) => {\n    if (!query) {\n      setSearchResultCount(0);\n      setCharacters([]);\n    }\n  };\n\n  return (\n    <>\n      <Title>SWAPI SEARCH</Title>\n      <SearchInput\n        placeholder=\"Type to search for a Star Wars character\"\n        id=\"characterSearch\"\n        isLoading={isLoading}\n        labelKey={(option) => option.name}\n        onSearch={handleNewSearch}\n        onInputChange={checkEmpty}\n        minLength={1}\n        useCache={false}\n        open={false}\n        ref={ref}\n      />\n      {!!searchResultCount && (\n        <MenuBar>\n          <Container>\n            <p>\n              {searchResultCount} <span>results</span> | Page: {currentPage}\n            </p>\n          </Container>\n          <Container>\n            {prevPageUrl && (\n              <Button id=\"previous\" onClick={handlePageChange}>\n                <FontAwesomeIcon icon={faChevronLeft} />\n                Prev\n              </Button>\n            )}\n            {nextPageUrl && (\n              <Button id=\"next\" onClick={handlePageChange}>\n                Next\n                <FontAwesomeIcon icon={faChevronRight} />\n              </Button>\n            )}\n          </Container>\n        </MenuBar>\n      )}\n    </>\n  );\n};\n\nexport default SearchBar;\n\nconst Title = styled.h1`\n  text-align: center;\n  color: #ffe81f;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 3.5rem;\n`;\n\nconst SearchInput = styled(AsyncTypeahead)`\n  input {\n    padding: 8px 6px;\n    width: 100%;\n    -webkit-appearance: none;\n    appearance: none;\n    border-radius: 3px;\n    border: 1px solid #ccc;\n    font-size: larger;\n  }\n\n  .dropdown-menu {\n    z-index: 5;\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);\n    border-radius: 2px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    background: white;\n\n    a {\n      display: block;\n      padding: 12px 6px;\n      color: #000000;\n      text-decoration: none;\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.08);\n      }\n    }\n\n    p {\n      margin: 0;\n      color: #000000;\n    }\n  }\n`;\n\nconst MenuBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst Container = styled.div``;\n\nconst Button = styled.span`\n  display: inline-block;\n  cursor: pointer;\n\n  svg {\n    pointer-events: none;\n  }\n\n  &:first-of-type {\n    svg {\n      margin-right: 10px;\n    }\n  }\n\n  &:last-of-type {\n    margin-left: 20px;\n\n    svg {\n      margin-left: 8px;\n    }\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport { getHomeworldInfo, getSpeciesInfo } from '../lib/api';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\nconst CharacterCard = ({ character }) => {\n  const [species, setSpecies] = useState();\n  const [homeworld, setHomeworld] = useState({});\n\n  const history = useHistory();\n  const signal = axios.CancelToken.source();\n\n  const handleClick = (id) => {\n    history.push(`/character/${id}`);\n  };\n\n  const handleSpeciesRequest = async () => {\n    try {\n      const { name } = await getSpeciesInfo(character.speciesUrl, signal.token);\n      setSpecies(name);\n    } catch (err) {\n      if (!axios.isCancel(err)) {\n        console.error(err);\n      }\n    }\n  };\n\n  const handleHomeworldRequest = async () => {\n    try {\n      const results = await getHomeworldInfo(\n        character.homeworldUrl,\n        signal.token\n      );\n      setHomeworld(results);\n    } catch (err) {\n      if (!axios.isCancel(err)) {\n        console.error(err);\n      }\n    }\n  };\n\n  useEffect(() => {\n    handleSpeciesRequest();\n    handleHomeworldRequest();\n    return () => {\n      signal.cancel('Component unmounted, canceling promises');\n    };\n  }, []);\n\n  return (\n    <>\n      <Card onClick={() => handleClick(character.id)}>\n        <Title>\n          {character.name}\n          {species && <SpeciesText>({species})</SpeciesText>}\n        </Title>\n        {homeworld.name ? (\n          <Description>\n            From {homeworld.name} (population: {homeworld.population})\n          </Description>\n        ) : (\n          <FontAwesomeIcon icon={faCircleNotch} spin />\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default CharacterCard;\n\nconst Card = styled.div`\n  cursor: pointer;\n  list-style-type: none;\n  border-radius: 4px;\n  width: 100%;\n  padding: 2em;\n  margin-bottom: 2em;\n  background: rgba(255, 255, 255, 0.05);\n  transform: scale(0.98);\n  transition: background 0.2s ease-in-out, transform 0.2s ease-in-out;\n  position: relative;\n\n  @media only screen and (min-width: 600px) {\n    width: calc(50% - 20px);\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    border-radius: inherit;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: block;\n    box-shadow: 0px 0px 0px 1px #ffe81f;\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n  }\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.12);\n    transform: scale(1);\n    transition: background 0.2s ease-in-out, transform 0.2s ease-in-out;\n\n    &:before {\n      opacity: 1;\n      transition: opacity 0.2s ease-in-out;\n    }\n  }\n`;\n\nconst Title = styled.h3`\n  margin-top: 0;\n`;\n\nconst Description = styled.p`\n  margin: 0;\n`;\n\nconst SpeciesText = styled.span`\n  margin-left: 5px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport CharacterCard from './CharacterCard';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\nconst CharacterList = ({ characters, isLoading }) => {\n  return (\n    <>\n      {!isLoading ? (\n        <List>\n          {characters.map((character) => (\n            <CharacterCard key={character.id} character={character} />\n          ))}\n        </List>\n      ) : (\n        <Loader>\n          <FontAwesomeIcon icon={faCircleNotch} spin size=\"5x\" />\n        </Loader>\n      )}\n    </>\n  );\n};\n\nexport default CharacterList;\n\nconst List = styled.ul`\n  padding: 0;\n  list-style-type: none;\n  text-align: center;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst Loader = styled.div`\n  margin-top: 50px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n","import React, { useState } from 'react';\n\nimport SearchBar from './SearchBar';\nimport CharacterList from './CharacterList';\n\nconst SearchPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [characters, setCharacters] = useState([]);\n\n  return (\n    <>\n      <SearchBar\n        setCharacters={setCharacters}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n      />\n      <CharacterList characters={characters} isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default SearchPage;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst FilmList = (data) => {\n  const [films, setFilms] = useState();\n\n  useEffect(() => {\n    const { films } = data;\n    const sortByDescending = (obj) => {\n      return obj.sort((a, b) => {\n        return Date.parse(b.release_date) - Date.parse(a.release_date);\n      });\n    };\n    setFilms(sortByDescending(films));\n  }, []);\n\n  return (\n    <>\n      <List>\n        {films &&\n          films.map((film) => (\n            <Card key={film.title}>\n              <Title>{film.title}</Title>\n              <p>Release date: {film.release_date}</p>\n              <p>{film.opening_crawl}</p>\n            </Card>\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default FilmList;\n\nconst List = styled.ul`\n  padding: 0;\n  list-style-type: none;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst Card = styled.li`\n  list-style-type: none;\n  width: calc(50% - 10px);\n  padding: 28px;\n  margin-bottom: 15px;\n  background: rgba(255, 255, 255, 0.05);\n`;\n\nconst Title = styled.h3`\n  // text-transform: uppercase;\n  margin-top: 0;\n  font-weight: bolder;\n`;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  getCharacterInfo,\n  getHomeworldInfo,\n  getSpeciesInfo,\n  getFilmInfo,\n} from '../lib/api';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\nimport FilmList from './FilmList';\n\nconst CharacterPage = ({ match }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [character, setCharacter] = useState();\n  const [homeworld, setHomeworld] = useState({});\n  const [species, setSpecies] = useState();\n  const [films, setFilms] = useState({});\n\n  const signal = axios.CancelToken.source();\n  const history = useHistory();\n  const handleClose = () => {\n    history.push(`/`);\n  };\n\n  const handleCharacterRequest = async (id) => {\n    try {\n      setIsLoading(true);\n      const results = await getCharacterInfo(id, signal.token);\n      setCharacter(results);\n      setIsLoading(false);\n    } catch (err) {\n      if (!axios.isCancel(err)) {\n        console.log(err.response);\n        toast.error(\n          `Something went wrong. Error message: ${err.response.data.detail} (${err.response.status})`\n        );\n        console.error(err);\n      }\n    }\n  };\n\n  const handleHomeworldRequest = async (data) => {\n    try {\n      const { homeworldUrl } = data;\n      const results = await getHomeworldInfo(homeworldUrl, signal.token);\n      setHomeworld(results);\n    } catch (err) {\n      if (!axios.isCancel(err)) {\n        console.error(err);\n      }\n    }\n  };\n\n  const handleSpeciesRequest = async (data) => {\n    try {\n      const { speciesUrl } = data;\n      const { name } = await getSpeciesInfo(speciesUrl, signal.token);\n      setSpecies(name);\n    } catch (err) {\n      if (!axios.isCancel(err)) {\n        console.error(err);\n      }\n    }\n  };\n\n  const handleMultipleFilmRequest = async (data) => {\n    try {\n      const { filmsArray } = data;\n      const result = await Promise.all(\n        filmsArray.map((url) => {\n          return getFilmInfo(url, signal.token);\n        })\n      );\n      setFilms(result);\n    } catch (err) {\n      if (!axios.isCancel(err)) {\n        console.error(err);\n      }\n    }\n  };\n\n  useEffect(() => {\n    handleCharacterRequest(match.params.id);\n\n    return () => {\n      signal.cancel('Component unmounted, canceling promises');\n    };\n  }, []);\n\n  useEffect(() => {\n    if (character) {\n      handleHomeworldRequest(character);\n      handleSpeciesRequest(character);\n      handleMultipleFilmRequest(character);\n    }\n\n    return () => {\n      signal.cancel('Component unmounted, canceling promises');\n    };\n  }, [character]);\n\n  return (\n    <>\n      {!isLoading ? (\n        <Wrapper>\n          <Header>\n            <Container>\n              {character && (\n                <Title>\n                  {character.name}\n                  {species && <SpeciesText>({species})</SpeciesText>}\n                </Title>\n              )}\n              {homeworld.name && (\n                <Subtitle>\n                  From {homeworld.name} (population: {homeworld.population})\n                </Subtitle>\n              )}\n            </Container>\n            <Container>\n              <CloseButton onClick={handleClose}>\n                <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n              </CloseButton>\n            </Container>\n          </Header>\n          <Container>\n            {films[0] && (\n              <>\n                <h4>Films appeared in:</h4>\n                <div>{films && <FilmList films={films} />}</div>\n              </>\n            )}\n          </Container>\n        </Wrapper>\n      ) : (\n        <Loader>\n          <FontAwesomeIcon icon={faCircleNotch} size=\"6x\" spin />\n        </Loader>\n      )}\n    </>\n  );\n};\n\nexport default CharacterPage;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid white;\n  padding-bottom: 0.75em;\n  margin-bottom: 2.5em;\n`;\n\nconst CloseButton = styled.span`\n  cursor: pointer;\n  background: rgba(255, 255, 255, 0);\n  padding: 15px;\n  border-radius: 40px;\n\n  svg {\n    pointer-events: none;\n  }\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.12);\n  }\n`;\nconst Wrapper = styled.div``;\n\nconst Container = styled.div``;\n\nconst Loader = styled.div`\n  width: 100%;\n  text-align: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Title = styled.h1``;\n\nconst Subtitle = styled.p``;\n\nconst SpeciesText = styled.span`\n  margin-left: 8px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst NotFoundPage = () => {\n  return (\n    <>\n      <Container>\n        <Title>404</Title>\n        <Subtitle>This is not the page you are looking for.</Subtitle>\n      </Container>\n    </>\n  );\n};\n\nexport default NotFoundPage;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n`;\nconst Title = styled.h1`\n  font-size: 10rem;\n  font-weight: 800;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\nconst Subtitle = styled.h2`\n  font-size: 3rem;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SearchPage from './components/SearchPage';\nimport CharacterPage from './components/CharacterPage';\nimport NotFoundPage from './components/NotFoundPage';\n\nconst Wrapper = styled.div`\n  padding: 4em 20px;\n  max-width: 1000px;\n  width: 100%;\n  margin: auto;\n`;\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <ToastContainer />\n      <BrowserRouter basename=\"/\">\n        <Switch>\n          <Route\n            exact\n            path={`${process.env.PUBLIC_URL}/`}\n            component={SearchPage}\n          />\n          <Route\n            exact\n            path={`${process.env.PUBLIC_URL}/character/:id`}\n            component={CharacterPage}\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </BrowserRouter>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}